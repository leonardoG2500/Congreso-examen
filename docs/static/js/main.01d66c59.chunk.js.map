{"version":3,"sources":["context/AuthContext.js","types/authTypes.js","reducers/AuthReducer.js","image/Tics.png","image/utl.png","pages/LoginScreen.jsx","routes/PrivateRouter.jsx","components/Navbar.jsx","components/Card.jsx","pages/Participantes.jsx","pages/Registro.jsx","pages/EditPartic.jsx","routes/AppRouter.jsx","routes/PublicRouter.jsx","routes/LoginRouter.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","authTypes","AuthReducer","state","action","type","payload","log","Inicio","dispatch","useContext","history","useHistory","className","src","img1","Style","width","height","alt","onClick","push","img","PrivateRouter","auth","Component","component","rest","props","to","Navbar","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","replace","activeclassname","aria-current","Card","participante","style","name","lastName","href","twitter","target","ocupacion","init","participantes","localStorage","getItem","JSON","parse","Participantes","useReducer","map","Registro","useState","email","data","setData","handleChange","e","value","useEffect","setItem","stringify","actionAdd","uuid","for","onChange","required","handleAdd","c1","document","getElementById","checked","reset","alert","EditPartic","console","warn","match","params","AppRouter","exact","path","PublicRouter","LoginRouter","LoginScreen","App","Provider","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.01d66c59.chunk.js","sourcesContent":["import { createContext } from \"react\"; \r\n\r\nexport const AuthContext = createContext();","export const authTypes ={\r\n    login: \"login\",\r\n    logout:\"logout\",\r\n};\r\n","import {authTypes} from \"../types/authTypes\";\r\n\r\nexport const AuthReducer = (state, action) => {    \r\n    switch (action.type) {\r\n\r\n        case \"add\":\r\n            return [...state, action.payload]\r\n\r\n\r\n        case authTypes.login:\r\n            return { log: true };\r\n\r\n        case authTypes.logout:\r\n            return { log:false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Tics.50d678a6.png\";","export default __webpack_public_path__ + \"static/media/utl.9dc1deab.png\";","import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { authTypes } from '../types/authTypes';\r\n\r\nimport img from '../image/Tics.png'\r\nimport img1 from '../image/utl.png'\r\n\r\nimport Style from '../css/Style.css'\r\n\r\n\r\nconst Inicio = () => {\r\n\r\n\r\n    //Recuperar el contexto y el dispath para podelo modificar\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    //Recuperamos el history mediante useHistory\r\n    const history = useHistory();\r\n\r\n\r\n    const handleLogin = () => {\r\n\r\n        //Usamos el dispatch para modificar el context y establecer log=true\r\n        dispatch({type: authTypes.login});\r\n\r\n        //El metodo push mete una nueva ruta en la pila\r\n        history.push(\"/Participantes\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <img src={img1} Style={Style} width=\"300px\" height=\"500px\" alt=\"imagenes\"/>\r\n                        <h1>Congreso</h1>\r\n                        <h1>Tecnologias de la información  </h1>\r\n\r\n                        <button className=\"btn btn-primary\" onClick={handleLogin}>Participantes</button>\r\n\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n\r\n                        <img src={img} Style={Style} width=\"600px\" height=\"600px\" alt=\"imagenes\"/>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inicio\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n//component: Representa el componente que vamos a renderizar. \r\nconst PrivateRouter = ({ auth, component: Component, ...rest }) => {\r\n\r\n    return <Route \r\n    {...rest} \r\n    //Protegemos la ruta verificando el valor de auth\r\n    component={(props) => auth.log ? <Component {...props} /> : <Redirect to=\"/login\" />} />\r\n}\r\n\r\nexport default PrivateRouter;\r\n","import React, { useContext } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { authTypes } from '../types/authTypes';\r\nimport img from '../image/Tics.png'\r\nimport img1 from '../image/utl.png'\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n     //Recuperar el contexto y el dispath para podelo modificar\r\n     const {dispatch} = useContext(AuthContext);\r\n\r\n    //Definimos el history usando el hook useHistory\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () =>{\r\n        //console.log(history);\r\n\r\n        //Usamos el dispatch para modificar el context y establecer log=true\r\n        dispatch({type: authTypes.logout});\r\n\r\n        //Usando el metodo replase del history para remplazar una ruta por otra\r\n        history.replace(\"/login\");\r\n\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n            <div className=\"container-fluid\">\r\n                <img className=\"navbar-brand\" src={img} width=\"70px\" height=\"70px\"/>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"navbar-item\">\r\n                            <div className=\"d-flex\">\r\n                                <button className=\"btn\" onClick={handleLogout}>inicio</button>\r\n                            </div>                \r\n                        </li>    \r\n\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink activeclassname=\"active text-while\" className=\"nav-link\" aria-current=\"page\" to=\"/participantes\">Participantes</NavLink>                  \r\n                        </li>  \r\n\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink activeclassname=\"active text-while\" className=\"nav-link\" aria-current=\"page\" to=\"/registro\">Registro</NavLink>                      \r\n                        </li>  \r\n                    </ul> \r\n\r\n\r\n                \r\n                </div>\r\n                <img className=\"navbar-brand\" src={img1} width=\"70px\" height=\"70px\"/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport img from '../image/Tics.png'\r\n\r\nconst Card = ({participante, id}) => {\r\n\r\n    return (\r\n        <div className=\"card m-5 col col-md-4 card border-primary mb-3\" style={{width: 500}} >\r\n            <div  className=\"row g-0 \">\r\n                <div className=\" col-sm-5\" >\r\n                    <img  className=\"img-fluid rounded-start\" style={{width: 175, height: 175}} src={img}/>\r\n                </div>\r\n                <div className=\"col-sm-7\">\r\n                    <div className=\"card-body \">   \r\n                        <p className=\"card-text\">\r\n                        <h4 className=\"card-title\">{participante.name} {participante.lastName}</h4>\r\n                        <a href={`https://twitter.com/${participante.twitter}`}  target=\"_blank\">@{participante.twitter}</a>\r\n                        <h4 className=\"card-title\">{participante.ocupacion}</h4>\r\n                        </p>\r\n                        <Link to={`/ediar/${participante.id}`}>Editar</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Card\r\n","import React, {useReducer} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../components/Card'\r\nimport { AuthReducer } from '../reducers/AuthReducer'\r\n\r\nconst init = () => {\r\n    const participantes = localStorage.getItem(\"participantes\")\r\n    return participantes ? JSON.parse(participantes): []\r\n}\r\n\r\nconst Participantes = () => {\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, [], init)\r\n    return (\r\n        <div className=\"container\">\r\n            {/* Parte de la tarjeta de participantes */}\r\n            <div className=\"row\">\r\n                {\r\n                    state.map((participante) => (\r\n                        <Card key={participante.id} participante ={participante} />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n                   {/* Aqui termina */}\r\n\r\n                    <button>\r\n                        <Link className=\"card\" to=\"/registro\">\r\n                            Registrar\r\n                        </Link>\r\n                    </button>                 \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Participantes\r\n","import React, { useState, useReducer, useEffect } from 'react'\r\nimport {v4 as uuid} from \"uuid\"\r\nimport { AuthReducer } from '../reducers/AuthReducer'\r\n\r\n\r\n  const init = () =>{\r\n        const participantes = localStorage.getItem(\"participantes\")\r\n        return participantes ? JSON.parse(participantes) : []\r\n    }\r\n\r\nconst Registro = () => {\r\n\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, [], init)\r\n\r\n    const [data, setData] = useState({name:\"\", lastName:\"\", email:\"\", twitter:\"\", ocupacion:\"\"})\r\n\r\n    const {name, lastName, email, twitter, ocupacion} = data;\r\n\r\n    const handleChange = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"participantes\", JSON.stringify(state))\r\n    }, [state])\r\n\r\n\r\n    const actionAdd = {\r\n        type: \"add\",\r\n        payload:{\r\n            id: uuid(),\r\n            name,\r\n            lastName,\r\n            email,\r\n            twitter,\r\n            ocupacion,\r\n        },\r\n    };\r\n\r\n\r\n    const handleAdd = () => {\r\n        const {payload} = actionAdd;\r\n        const {name, lastName, email, twitter, ocupacion} = payload;\r\n        const c1 = document.getElementById('c1').checked\r\n\r\n        if(actionAdd.payload.name !== \"\" && actionAdd.payload.lastName !== \"\" && actionAdd.payload.email !== \"\" && actionAdd.payload.twitter !== \"\" && actionAdd.payload.ocupacion !== \"\" && c1==true){\r\n            dispatch(actionAdd);\r\n            handleAdd.reset();\r\n        }else{\r\n            alert(\"completa los datos\");\r\n        }  \r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n              \r\n                        <h1> Registro de Participante </h1>\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Nombre:{\" \"}\r\n                                        <input \r\n                                        onChange={handleChange}\r\n                                        name=\"name\"\r\n                                        value={name} \r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label>\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Apellidos:{\" \"}\r\n                                        <input \r\n                                        onChange={handleChange}\r\n                                        name=\"lastName\"\r\n                                        value={lastName} \r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label>\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Email:{\" \"}\r\n                                        <input \r\n                                        onChange={handleChange}\r\n                                        name=\"email\"\r\n                                        value={email} \r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label>\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Twitter:{\" \"}\r\n                                        <input \r\n                                        onChange={handleChange}\r\n                                        name=\"twitter\"\r\n                                        value={twitter} \r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label>\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Ocupación:{\" \"}\r\n                                        <input \r\n                                        onChange={handleChange}\r\n                                        name=\"ocupacion\"\r\n                                        value={ocupacion} \r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label> \r\n                                    <br />\r\n                                    <label><input type=\"checkbox\" value=\"check\" id=\"c1\" /> Leí y acepto los terminos y condiciones</label>\r\n                                </div>\r\n                                \r\n                            \r\n                                \r\n                                <label className=\"mx-1 d-grid gap-2\">\r\n                                   \r\n                                         <button onClick={handleAdd} className=\"btn btn-info mt-2\">Guardar</button>\r\n                                   \r\n                                    \r\n                                </label>\r\n                            </form>\r\n                \r\n                    \r\n            </div>\r\n       \r\n        </div>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Registro\r\n","import React, { useState, useReducer, useEffect } from 'react'\r\nimport {v4 as uuid} from \"uuid\"\r\nimport { AuthReducer } from '../reducers/AuthReducer'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\n\r\nconst EditPartic = (props) => {\r\n\r\n\r\n  \r\n\r\n    console.warn(\"props\", props.match.params.id)\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n              \r\n                        <h1> Registro de Participante </h1>\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Nombre:{\" \"}\r\n                                        <input \r\n                                        onChange=\"{handleChange}\"\r\n                                        name=\"name\"\r\n                                        value=\"{name}\" \r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label>\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Apellidos:{\" \"}\r\n                                        <input \r\n                                        onChange=\"{handleChange}\"\r\n                                        name=\"lastName\"\r\n                                        value=\"{lastName} \"\r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label>\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Email:{\" \"}\r\n                                        <input \r\n                                        onChange=\"{handleChange}\"\r\n                                        name=\"email\"\r\n                                        value=\"{email} \"\r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label>\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Twitter:{\" \"}\r\n                                        <input \r\n                                        onChange=\"{handleChange}\"\r\n                                        name=\"twitter\"\r\n                                        value=\"{twitter}\" \r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label>\r\n                                    <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> Ocupación:{\" \"}\r\n                                        <input \r\n                                        onChange=\"{handleChange}\"\r\n                                        name=\"ocupacion\"\r\n                                        value=\"{ocupacion} \"\r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        required/>\r\n                                    </label> \r\n                                    <br />\r\n                                    <label><input type=\"checkbox\" value=\"check\" id=\"c1\" /> Leí y acepto los terminos y condiciones</label>\r\n                                </div>\r\n                                \r\n                            \r\n                                \r\n                                <label className=\"mx-1 d-grid gap-2\">\r\n                                    <button onClick=\"{handleAdd}\" className=\"btn btn-info mt-2\">Guardar</button>\r\n                                </label>\r\n                            </form>\r\n                \r\n                    \r\n            </div>\r\n       \r\n        </div>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditPartic\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport Navbar from '../components/Navbar'\r\nimport Participantes from '../pages/Participantes'\r\nimport Registro from '../pages/Registro'\r\nimport EditPartic from '../pages/EditPartic'\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/participante\" component={Participantes} />\r\n                <Route exact path=\"/registro\" component={Registro} />\r\n                <Route exact path=\"/editar/:id\" component={EditPartic} />\r\n\r\n                {/*Con el <Redirect> hacemos que la ruta / nos redirija a /mens */}\r\n                <Redirect to=\"/participante\" />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nconst PublicRouter = ({ auth, component: Component, ...rest }) => {\r\n    return <Route \r\n    {...rest} \r\n    //Protegemos la ruta verificando el valor de auth.\r\n    component={(props) => !auth.log ? <Component {...props} /> : <Redirect to=\"/\" />} />\r\n};\r\n\r\nexport default PublicRouter;\r\n","import React, { useContext } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport LoginScreen from '../pages/LoginScreen'\r\nimport PrivateRouter from './PrivateRouter'\r\nimport AppRouter from './AppRouter'\r\nimport PublicRouter from './PublicRouter'\r\n\r\nconst LoginRouter = () => {\r\n\r\n    //Recuperamos el context mediante e hook useContext para así poder saber si el usuario esta autentica o no\r\n    const { log } = useContext(AuthContext);\r\n \r\n    return (\r\n        <Router>\r\n\r\n        {/* <AppRouter /> */}\r\n        {/* <Route exact path=\"/login\" component={LoginScreen} /> */}\r\n\r\n\r\n            <Switch>\r\n               <PublicRouter path=\"/login\" auth={log} component={LoginScreen} />\r\n               <PrivateRouter path=\"/\" auth={log} component={AppRouter} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default LoginRouter\r\n","import React, { useEffect, useReducer } from 'react';\nimport { AuthContext } from './context/AuthContext';\nimport { AuthReducer } from './reducers/AuthReducer';\nimport LoginRouter from './routes/LoginRouter';\n\n//Definomos la funcion init, para intentar recuperar el estado log desde el localStorage\nconst init = () => {\n  return JSON.parse(localStorage.getItem('log')) || {log:false}\n}\n\nconst App = () => {\n\n  //Definimos el context para toda la aplicación mediante el hook useReducer\n  const [log, dispatch] = useReducer(AuthReducer, {}, init)\n\n  //Definimosun useEffect para persistir el estado del log\n  useEffect(() => {\n    localStorage.setItem('log', JSON.stringify(log));\n  }, [log])\n\n\n  //Usamos <AuthContext.Provider> para proveer el contexto a toda la aplicación\n  return (\n  \n  <AuthContext.Provider value={{log, dispatch}}>\n    <LoginRouter />\n  </AuthContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}